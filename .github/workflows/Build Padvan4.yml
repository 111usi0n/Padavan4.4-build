name: Build  Padavan4

# Controls when the action will run. 
on:
#  schedule:
#    - cron: "0 2 * * *"
  push:
    branches:
      - master
  workflow_dispatch:
  
env:
  src_git: https://github.com/vb1980/padavan-4.4.git
  build_dir: /opt/rt-n56u  
  images_dir: /opt/images
  ENABLED_CFG: |
    CONFIG_FIRMWARE_INCLUDE_LANG_UK
  DISABLED_CFG: |
    CONFIG_FIRMWARE_INCLUDE_IPSET
    CONFIG_FIRMWARE_CPU_900MHZ
    CONFIG_FIRMWARE_CPU_SLEEP
    CONFIG_FIRMWARE_ENABLE_USB
    CONFIG_FIRMWARE_ENABLE_UFSD
    CONFIG_FIRMWARE_ENABLE_FAT
    CONFIG_FIRMWARE_ENABLE_EXFAT
    CONFIG_FIRMWARE_ENABLE_EXT2
    CONFIG_FIRMWARE_ENABLE_EXT3
    CONFIG_FIRMWARE_ENABLE_EXT4
    CONFIG_FIRMWARE_ENABLE_XFS
    CONFIG_FIRMWARE_ENABLE_FUSE
    CONFIG_FIRMWARE_ENABLE_SWAP
    CONFIG_FIRMWARE_INCLUDE_UVC
    CONFIG_FIRMWARE_INCLUDE_HID
    CONFIG_FIRMWARE_INCLUDE_SERIAL
    CONFIG_FIRMWARE_INCLUDE_AUDIO
    CONFIG_FIRMWARE_INCLUDE_XFRM
    CONFIG_FIRMWARE_INCLUDE_QOS
    CONFIG_FIRMWARE_INCLUDE_IMQ
    CONFIG_FIRMWARE_INCLUDE_IFB
    CONFIG_FIRMWARE_INCLUDE_NFSD
    CONFIG_FIRMWARE_INCLUDE_NFSC
    CONFIG_FIRMWARE_INCLUDE_CIFS
    CONFIG_FIRMWARE_INCLUDE_LANG_CN
    CONFIG_FIRMWARE_INCLUDE_LANG_BR
    CONFIG_FIRMWARE_INCLUDE_LANG_CZ
    CONFIG_FIRMWARE_INCLUDE_LANG_DA
    CONFIG_FIRMWARE_INCLUDE_LANG_DE
    CONFIG_FIRMWARE_INCLUDE_LANG_ES
    CONFIG_FIRMWARE_INCLUDE_LANG_FI
    CONFIG_FIRMWARE_INCLUDE_LANG_FR
    CONFIG_FIRMWARE_INCLUDE_LANG_NO
    CONFIG_FIRMWARE_INCLUDE_LANG_PL
    CONFIG_FIRMWARE_INCLUDE_LANG_RU
    CONFIG_FIRMWARE_INCLUDE_LANG_SV
    CONFIG_FIRMWARE_INCLUDE_NTFS_3G
    CONFIG_FIRMWARE_INCLUDE_LPRD
    CONFIG_FIRMWARE_INCLUDE_U2EC
    CONFIG_FIRMWARE_INCLUDE_TCPDUMP
    CONFIG_FIRMWARE_INCLUDE_HDPARM
    CONFIG_FIRMWARE_INCLUDE_PARTED
    CONFIG_FIRMWARE_INCLUDE_SMBD
    CONFIG_FIRMWARE_INCLUDE_SMBD36
    CONFIG_FIRMWARE_INCLUDE_WINS
    CONFIG_FIRMWARE_INCLUDE_SMBD_SYSLOG
    CONFIG_FIRMWARE_INCLUDE_FTPD
    CONFIG_FIRMWARE_INCLUDE_RPL2TP
    CONFIG_FIRMWARE_INCLUDE_EAP_PEAP
    CONFIG_FIRMWARE_INCLUDE_HTTPS
    CONFIG_FIRMWARE_INCLUDE_SFTP
    CONFIG_FIRMWARE_INCLUDE_DROPBEAR
    CONFIG_FIRMWARE_INCLUDE_DROPBEAR_FAST_CODE
    CONFIG_FIRMWARE_INCLUDE_OPENSSH
    CONFIG_FIRMWARE_INCLUDE_OPENVPN
    CONFIG_FIRMWARE_INCLUDE_SSWAN
    CONFIG_FIRMWARE_INCLUDE_OPENSSL_EC
    CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE
    CONFIG_FIRMWARE_INCLUDE_XUPNPD
    CONFIG_FIRMWARE_INCLUDE_MINIDLNA
    CONFIG_FIRMWARE_INCLUDE_FIREFLY
    CONFIG_FIRMWARE_INCLUDE_FFMPEG_NEW
    CONFIG_FIRMWARE_INCLUDE_TRANSMISSION
    CONFIG_FIRMWARE_INCLUDE_TRANSMISSION_WEB_CONTROL
    CONFIG_FIRMWARE_INCLUDE_ARIA
    CONFIG_FIRMWARE_INCLUDE_ARIA_WEB_CONTROL
    CONFIG_FIRMWARE_INCLUDE_CURL
    CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT
    CONFIG_FIRMWARE_INCLUDE_GDUT_DRCOM
    CONFIG_FIRMWARE_INCLUDE_DOGCOM
    CONFIG_FIRMWARE_INCLUDE_MINIEAP
    CONFIG_FIRMWARE_INCLUDE_NJIT_CLIENT
    CONFIG_FIRMWARE_INCLUDE_NAPT66
    CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_SERVER
    CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CLIENT
    CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CMD
    CONFIG_FIRMWARE_INCLUDE_VLMCSD
    CONFIG_FIRMWARE_INCLUDE_TTYD
    CONFIG_FIRMWARE_INCLUDE_LRZSZ
    CONFIG_FIRMWARE_INCLUDE_HTOP
    CONFIG_FIRMWARE_INCLUDE_NANO
    CONFIG_FIRMWARE_INCLUDE_IPERF3
    CONFIG_FIRMWARE_INCLUDE_DUMP1090
    CONFIG_FIRMWARE_INCLUDE_RTL_SDR
    CONFIG_FIRMWARE_INCLUDE_MTR
    CONFIG_FIRMWARE_INCLUDE_SOCAT
    CONFIG_FIRMWARE_INCLUDE_SRELAY
    CONFIG_FIRMWARE_INCLUDE_MENTOHUST
    CONFIG_FIRMWARE_INCLUDE_FRPC
    CONFIG_FIRMWARE_INCLUDE_FRPS
    CONFIG_FIRMWARE_INCLUDE_TUNSAFE
    CONFIG_FIRMWARE_INCLUDE_WIREGUARD
    CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS
    CONFIG_FIRMWARE_INCLUDE_SSSERVER
    CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER
    CONFIG_FIRMWARE_INCLUDE_SMBD36
    CONFIG_FIRMWARE_INCLUDE_3PROXY
    CONFIG_FIRMWARE_INCLUDE_SMARTDNS
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
workflow_dispatch:
    inputs:
      target:
        type: choice
        description: 'Please select the model to compile'
        options:
        - 'B70'
        - 'MI-4'
        default: 'K2P'
      release:
        type: boolean
        description: 'upload to release'
        default: 'true'
jobs:
  build:
    name: ${{ inputs.target }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hendrikmuhs/ccache-action@v1.2.3
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.19.2'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-v1
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Prepare environment
        run: |
          sudo apt update
          sudo apt install libtool-bin gperf python3-docutils autopoint gettext ccache
      - name: Start Build
        run: |
          make ${{ inputs.target }}
          echo "TAG_ANME=$(date +%Y%m%d)" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.target }}-${{ env.TAG_ANME }}
          path: trunk/images/*.trx
      - uses: ncipollo/release-action@v1
        if: github.event.inputs.release == 'true'
        with:
          commit: ${{ github.sha }}
          tag: Padavan
          artifacts: trunk/images/*.trx
          allowUpdates: true
